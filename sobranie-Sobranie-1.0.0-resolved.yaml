---
swagger: "2.0"
info:
  description: This is a simple API
  version: 1.0.0
  title: Casino Sobranie API for mobile applicaton
  contact:
    email: yurenkoyura@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /sobranie/Sobranie/1.0.0
tags:
- name: Auth
  description: Everything for client authorize
- name: Forgot Password
  description: If client forgot a password
- name: Events
  description: Events
- name: Clients
  description: Clients data
- name: Restaurant
  description: Restaurant data
- name: Poker Club
  description: Pocker club news
schemes:
- https
paths:
  /api/auth/getcode:
    post:
      tags:
      - Auth
      summary: Send SMS by phone_number
      description: Send SMS with  4 digits code and check if user registered
      operationId: sendSMS
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: phone
        description: Phone number for send
        required: true
        schema:
          $ref: '#/definitions/Smsparams'
      responses:
        "200":
          description: sms sended if client not registered only 3 attempts
          schema:
            $ref: '#/definitions/SmsResponse'
        "201":
          description: if client registered
          schema:
            $ref: '#/definitions/ClientRegistered'
        "202":
          description: Interval  between next SMS 1 minute
          schema:
            $ref: '#/definitions/SmsResponse1'
        "400":
          description: 3 attempts expired
          schema:
            $ref: '#/definitions/SmsResponse2'
  /api/auth/checkcode:
    post:
      tags:
      - Auth
      summary: Checks client sended via SMS code
      description: Check code if checked
      operationId: checkCode
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: body
        description: code recieved via SMS
        required: true
        schema:
          $ref: '#/definitions/Checkcode'
      responses:
        "200":
          description: Code checked sucessfully
          schema:
            $ref: '#/definitions/Checkcode2'
        "202":
          description: if secret code wrong
          schema:
            $ref: '#/definitions/Checkcode4'
        "400":
          description: if not foud Registration record
          schema:
            $ref: '#/definitions/Checkcode3'
        "401":
          description: if Secret code failed or was 3 attempts
          schema:
            $ref: '#/definitions/Checkcode1'
  /api/auth/register:
    post:
      tags:
      - Auth
      summary: Register client with phone number and password
      description: Perform cliens registration with operation_hash after check code
      operationId: register
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: body
        description: Parameters phone ,operation hash after code check and client password
        required: true
        schema:
          $ref: '#/definitions/RegisterBody'
      responses:
        "200":
          description: if client registered succesfully
          schema:
            $ref: '#/definitions/RegisterResponse'
        "400":
          description: if registration fails
          schema:
            $ref: '#/definitions/RegisterFail'
  /api/auth/login:
    post:
      tags:
      - Auth
      summary: Login client with phone number and password
      description: Perform cliens login with phone number and password
      operationId: login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: body
        description: Parameters phone and client password
        required: true
        schema:
          $ref: '#/definitions/LoginBody'
      responses:
        "200":
          description: if client logged succesfully
          schema:
            $ref: '#/definitions/LoginSuccess'
        "401":
          description: if login fails
          schema:
            $ref: '#/definitions/LoginFail'
  /api/forgotPassword/getcode:
    post:
      tags:
      - Forgot Password
      summary: Send SMS to phone number
      description: Send SMS with  4 digits code and check if user registered
      operationId: forgotPassword
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: phone
        description: Phone number for send
        required: true
        schema:
          $ref: '#/definitions/Smsparams'
      responses:
        "200":
          description: sms sended if client not registered only 3 attempts
          schema:
            $ref: '#/definitions/SmsResponse'
        "202":
          description: Interval  between next SMS 1 minute
          schema:
            $ref: '#/definitions/SmsResponse1'
        "400":
          description: 3 attempts expired
          schema:
            $ref: '#/definitions/SmsResponse2'
  /api/forgotPassword/checkcode:
    post:
      tags:
      - Forgot Password
      summary: Checks client code sended via SMS
      description: Check code if checked
      operationId: passwordcheckCode
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: body
        description: code recieved via SMS
        required: true
        schema:
          $ref: '#/definitions/Checkcode'
      responses:
        "200":
          description: Code checked sucessfully
          schema:
            $ref: '#/definitions/Checkcode2'
        "202":
          description: if secret code wrong
          schema:
            $ref: '#/definitions/Checkcode4'
        "401":
          description: if Secret code failed or was 3 attempts
          schema:
            $ref: '#/definitions/Checkcode1'
  /api/forgotPassword/newpassword:
    post:
      tags:
      - Forgot Password
      summary: Checks client code sended via SMS
      description: Change client password
      operationId: newPassword
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - in: body
        name: body
        description: Body parameters
        required: true
        schema:
          $ref: '#/definitions/NewPassword'
      responses:
        "200":
          description: Password changed succesfully
          schema:
            $ref: '#/definitions/NewPasswordSuccess'
  /api/events:
    get:
      tags:
      - Events
      summary: Get all events
      description: Returns all events data
      operationId: events
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      responses:
        "200":
          description: Events data
          schema:
            $ref: '#/definitions/EventFields'
  /api/event/{eventId}:
    get:
      tags:
      - Events
      summary: Get event with id
      description: Return Event data with id
      operationId: eventId
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - name: eventId
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Events data
          schema:
            $ref: '#/definitions/EventFields'
  /api/client/{clientId}:
    get:
      tags:
      - Clients
      summary: Get client with id
      description: Return Client data with id
      operationId: clientId
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Client data
          schema:
            $ref: '#/definitions/ClientProfileFields'
  /api/restaurants:
    get:
      tags:
      - Restaurant
      summary: Get all restaurants
      description: Returns all restaurants data
      operationId: restaurants
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      responses:
        "200":
          description: Restaurants data
          schema:
            $ref: '#/definitions/RestaurantFields'
  /api/restaurant/{restaurantId}:
    get:
      tags:
      - Restaurant
      summary: Get a Restaurant with id
      description: Return Client data with id
      operationId: restraurantId
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - name: restaurantId
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Restaurant data
          schema:
            $ref: '#/definitions/RestaurantFields'
  /api/menuImages/{restaurantId}:
    get:
      tags:
      - Restaurant
      summary: Get all menu images for restaurant with Id
      description: Return image data with  restaurant id
      operationId: imageId
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - name: restaurantId
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Images data
          schema:
            $ref: '#/definitions/RestaurantImagesFields'
  /api/pokerClub:
    get:
      tags:
      - Poker Club
      summary: Get all news and event for Poker Club
      description: Returns all events data
      operationId: poker
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      responses:
        "200":
          description: Poker Club Data array of objects
          schema:
            $ref: '#/definitions/PokerNewsFields'
  /api/pokerClub/{Id}:
    get:
      tags:
      - Poker Club
      summary: Get all all info for pokerclub news with Id
      description: Return a poker Club new with id
      operationId: pockerclubId
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: true
        type: string
      - name: Id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Pocker news data
          schema:
            $ref: '#/definitions/PokerNewsFields'
definitions:
  Smsparams:
    properties:
      phone:
        type: string
        example: 380XXXXXXXXX
  SmsResponse:
    type: object
    properties:
      message:
        type: string
        example: Code sended
      atttempt:
        type: integer
        example: 1
      code:
        type: integer
        example: 5465
  SmsResponse1:
    type: object
    properties:
      message:
        type: string
        example: Resending code will be after 1 minute(s)
  SmsResponse2:
    type: object
    properties:
      error:
        type: string
        example: 3  allowed attempts count expired
  RegisterBody:
    type: object
    properties:
      phone:
        type: string
        example: 380XXXXXXXXX
      password:
        type: string
        example: clientpassword
  RegisterResponse:
    type: object
    properties:
      message:
        type: string
        example: Client registered succesfully
      id:
        type: integer
        example: 7
  RegisterFail:
    type: object
    properties:
      error:
        type: string
        example: Client not registered
  Checkcode:
    type: object
    properties:
      phone:
        type: string
        example: 380XXXXXXXXX
      code:
        type: integer
        example: 5465
  Checkcode1:
    type: object
    properties:
      error:
        type: string
        example: Secret code Failed
  Checkcode2:
    type: object
    properties:
      message:
        type: string
        example: Code is checked
      success:
        type: boolean
        example: true
  Checkcode3:
    type: object
    properties:
      error:
        type: string
        example: Not found registration record for this phone number
  Checkcode4:
    type: object
    properties:
      error:
        type: string
        example: Secret code wrong
      sucess:
        type: boolean
        example: false
  LoginBody:
    type: object
    properties:
      phone:
        type: string
        example: 380XXXXXXXXX
      password:
        type: string
        example: password
  LoginSuccess:
    type: object
    properties:
      access_token:
        type: string
        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9jYXNpbm8ubG9jXC9hcGlcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjEyNTI4NTc4LCJleHAiOjE2MTI1MzIxNzgsIm5iZiI6MTYxMjUyODU3OCwianRpIjoic2FnZHhtVDJQblJrdnRKdiIsInN1YiI6NywicHJ2IjoiNDFlZmI3YmFkN2Y2ZjYzMmUyNDA1YmQzYTc5M2I4YTZiZGVjNjc3NyJ9.7COQRrk0zRZaCoG-ZCuEe_DqdLELIk7ioPrQF8K_A60
      token_type:
        type: string
        example: bearer
      expires_in:
        type: integer
        example: 36000
  LoginFail:
    type: object
    properties:
      error:
        type: string
        example: Unauthorized
  ClientRegistered:
    type: object
    properties:
      client_status:
        type: string
        example: registered
  EventFields:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Event 1 name
      description:
        type: string
        example: Event 1 description
      image_URL:
        type: string
        example: /uploads/images/events/601bfab1d0c43.jpg
      created_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
      updated_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
  ClientProfileFields:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: John Smith
      phone:
        type: string
        example: 380XXXXXXXXX
      status_id:
        type: integer
        example: 1
      created_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
      updated_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
  RestaurantFields:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Craft OFFSHORE
      main_image_URL:
        type: string
        example: /uploads/images/events/601bfab1d0c43.jpg
      created_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
      updated_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
  RestaurantImagesFields:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      restaurant_id:
        type: integer
        format: int64
        example: 3
      menu_image_URL:
        type: string
        example: /uploads/images/events/601bfab1d0c43.jpg
      created_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
      updated_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
  NewPassword:
    type: object
    properties:
      phone:
        type: string
        example: 8800XXXXXXX
      password:
        type: string
        example: New Client password
  NewPasswordSuccess:
    type: object
    properties:
      message:
        type: string
        example: Password changed succesfully
      success:
        type: boolean
        example: true
  PokerNewsFields:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        format: int64
        example: Cash Game
      icon:
        type: string
        example: /uploads/images/pokerclub/601bfab1d0c43.jpg
      by_in:
        type: string
        example: 0/10/10
      stack:
        type: string
        example: 2500/4000/10000
      levels:
        type: string
        example: 6*20/15
      created_at:
        type: string
        example: 0/10/10
      updated_at:
        type: string
        example: 2021-02-04T14:22:39.000000Z
